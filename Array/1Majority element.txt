//Element which occurs more than n/2 times.
//hashing approach takes O(n) time and Space.
//Moores voting algorithm takes O(n) time ONLY.

//Intuition Behind MV's algo:
	1: It depends on the count of the numbers on the array.
	2: Main Intuition is, if a number appears more than n/2 times, then it should last till the end of the array.
	3: If the count becomes zero at any point, it means there is no majority element in this sector of the array, and
	4: the majority element becomes the number under examination.
  


 int majorityElement(vector<int>& nums) {
        int cnt=0,m;
        for(int i=0;i<nums.size();++i) {
            if(!cnt) m=nums[i],cnt=1;
            else cnt += (nums[i]==m)?1:-1;
        }
        return m;
    }