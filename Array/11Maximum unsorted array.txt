1. The concept is finding the distance between first and last (large,small) pairs.
In first pass last pair and in second pass first pair is found.

 int findUnsortedSubarray(vector<int>& nums) {
        if(nums.empty() || nums.size() == 1) return 0;
        int b = -1, e = -2;
        int n = nums[0];
        for(int i=1; i<nums.size(); ++i) {
            if(nums[i] < n) e = i;
            n = max(n, nums[i]);
        }
        n = nums[nums.size()-1];
        for(int i=nums.size()-2; i>=0; --i) {
            if(nums[i] > n) b = i;
            n = min(n, nums[i]);
        }
        return e-b+1;
    }