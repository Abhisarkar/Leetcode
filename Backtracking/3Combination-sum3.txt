 void backtrack(vector <vector<int>> &ans, vector<int> res, int k, int n,int cnt, int s) {
        if(n<0) return;
        else if(cnt == k && !n) ans.push_back(res);       
        for(int i=s;i<=9;++i) {
            res.push_back(i);
            backtrack(ans, res, k, n-i, cnt+1, i+1);
            res.pop_back();
        }
    }
    
    vector<vector<int>> combinationSum3(int k, int n) {
        vector <vector<int>> ans;
        vector <int> res;
        backtrack(ans, res, k, n, 0, 1);
        return ans;
    }