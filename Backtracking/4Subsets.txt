
   void backtrack(vector<vector<int>> &ans, vector<int> res, vector<int> &nums, int begin) {       
        for(int i=begin;i<nums.size();++i) {
            res.push_back(nums[i]); ans.push_back(res); // At each level, different permutations will occur(subsets)(distinct elements)
            backtrack(ans, res, nums, i+1);
            res.pop_back();
        }
    }
    
    vector<vector<int>> subsets(vector<int>& nums) {
       vector<vector<int>> ans;
        vector<int> res;       
        ans.push_back(res);
        backtrack(ans, res, nums, 0);
        return ans;
    }