//Number of connected components.

int row, col;
    bool visited[1005][1005];
    void dfs(vector<vector<char>>& grid, int x, int y) {
        if(x<0 || x>=row || y<0 || y>=col || grid[x][y] != '1' || visited[x][y]) return;
        visited[x][y] = true;
        int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};
        for(int k=0 ; k<4; ++k) 
            dfs(grid, x+dx[k], y+dy[k]);
    }
    
     int numIslands(vector<vector<char>>& grid) { 
        if (!grid.size()) return 0;
        row = grid.size(), col = grid[0].size();    
         memset(visited, false, sizeof(visited));
         int c = 0;
       for(int i=0; i<row; i++)
           for(int j=0; j<col; ++j) {
               if(grid[i][j] == '1' && !visited[i][j]) dfs(grid, i, j), ++c;
           }
        return c;
    }