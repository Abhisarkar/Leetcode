//Lengths are better calculated by rear-front+1 

int lengthOfLongestSubstring(string s) {
        if(s.empty()) return 0;
        int f = 0, ans = 0, len = 0;
        map <char, int> m;
        for(int i=0; i<s.size(); ++i) {
            if(!m[s[i]]) {
                m[s[i]]=1;
            }
            else {              
               while(s[f] != s[i]) {//while the front is <= the this characters previously encountered position
                    m[s[f]]--; f++;
                }
                f++;
            }
             ans = max(ans, i - f + 1);
        }
        return ans;
    }